/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <26 27>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <26 14>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <38 26>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <39 40>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <38 39>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <37 38>;
            layers = <0>;
            require-prior-idle-ms = <50>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <27 39>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <27 15>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <40 28>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <29 17>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <29 41>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 44>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <30 18>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <19 31>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 45>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <45 46>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        lpar_lt {
            bindings = <&lpar_lt>;
            key-positions = <31 32>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        asterisk {
            bindings = <&kp ASTRK>;
            key-positions = <20 32>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 46>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        rpar_gt {
            bindings = <&rpar_gt>;
            key-positions = <32 33>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <20 21>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        amp {
            bindings = <&kp AMPERSAND>;
            key-positions = <21 33>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <33 47>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };

        all {
            bindings = <&kp LG(A)>;
            key-positions = <40 41>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };
    };

    behaviors {
        esc_mm: esc_mm {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_MM";
            bindings = <&kp ESCAPE>, <&mt TILDE GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "balanced";
        };

        lpar_lt: lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_LT";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        rpar_gt: rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_GT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&esc_mm         &kp N1              &kp N2          &kp N3          &kp N4            &kp N5                                  &kp N6  &kp N7             &kp N8           &kp N9           &kp N0                       &kp MINUS
&kp TAB         &kp Q               &kp W           &kp E           &kp R             &kp T                                   &kp Y   &kp U              &kp I            &kp O            &kp P                        &kp DEL
&kp LEFT_SHIFT  &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &kp G                                   &kp H   &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RIGHT_CONTROL SEMICOLON  &kp SQT
&mo 3           &kp Z               &kp X           &kp C           &kp V             &kp B   &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N   &kp M              &kp COMMA        &kp DOT          &kp FSLH                     &mo 3
                                    &kp LEFT        &kp HOME        &kp LG(SPACE)     &mo 1   &kp SPACE     &kp ENTER         &mo 2   &kp BACKSPACE      &kp END          &kp RIGHT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none  &none  &none         &kp FSLH      &kp ASTERISK  &kp MINUS                      &none          &none     &none         &none      &none          &none
&none  &none  &kp N7        &kp N8        &kp N9        &kp PLUS                       &kp PAGE_UP    &none     &kp UP_ARROW  &none      &none          &none
&none  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BACKSPACE                  &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &kp BACKSPACE  &kp DELETE
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none          &none    &none  &kp INS        &kp TAB   &none         &none      &none          &none
              &kp N0        &kp PERIOD    &kp ENTER     &none          &none    &none  &none          &none     &none         &none
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        raise_layer {
            display-name = "raise";
            bindings = <
&none          &none       &none     &none         &none      &none                          &none  &none         &kp SLASH     &kp ASTERISK  &kp MINUS      &none
&none          &none       &none     &kp UP_ARROW  &none      &kp PAGE_UP                    &none  &kp N7        &kp N8        &kp N9        &kp PLUS       &none
&kp BACKSPACE  &kp DELETE  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN                  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BACKSPACE  &none
&none          &none       &none     &none         &kp TAB    &kp INS        &none    &none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none          &none
                           &none     &none         &none      &none          &none    &none  &none  &kp N0        &kp PERIOD    &kp ENTER
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "System";
            bindings = <
&bt BT_CLR_ALL     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none                 &none            &none                 &none        &none
&ext_power EP_TOG  &kp F12       &kp F7        &kp F8        &kp F9        &studio_unlock                  &none  &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))   &kp LG(LS(NUMBER_3))  &none        &none
&none              &kp F11       &kp F4        &kp F5        &kp F6        &none                           &none  &kp LC(LS(TAB))       &kp LC(LEFT)     &kp LC(RIGHT)         &kp LC(TAB)  &none
&none              &kp F10       &kp F1        &kp F2        &kp F3        &caps_word      &none    &none  &none  &kp LG(LS(T))         &kp LG(LS(TAB))  &kp LG(TAB)           &kp LG(T)    &none
                                 &none         &none         &none         &none           &none    &none  &none  &none                 &none            &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
